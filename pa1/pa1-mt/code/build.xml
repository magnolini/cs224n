<project name="Phrasal" default="compile" basedir=".">
    <description>
        Phrasal machine translation system.
    </description>
  <property name="src" location="${basedir}/src"/>
  <property name="build.path"     value="${basedir}/classes"/>
	<property name="extdeps.path"   value="${basedir}/lib-nodistrib"/>
  <property environment="env"/>

  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>
  <property name="compile.source"      value="1.7" />
  <property name="compile.target"      value="1.7" />
  <property name="compile.encoding"    value="utf-8" />

	<target name="checkdeps">
		<available file="${extdeps.path}" type="dir" property="extdeps.present"/>
	</target>
	
	<target name="extdeps" depends="checkdeps" unless="extdeps.present">
		<!-- TODO Windows users need to specify path to Cygwin -->
		<exec dir="." executable="C:\Path\to\cygwin\bin\bash" osfamily="windows">
			<arg value="${basedir}/scripts/get-dependencies.sh"/>
		</exec>
		<exec executable="/bin/bash" osfamily="unix">
			<arg value="${basedir}/scripts/get-dependencies.sh"/>
		</exec>
	</target>
	
   <target name="classpath" description="Sets the classpath">
    <echo message="${ant.project.name}" />
    <path id="classpath">
      <!-- depends on local libs -->
      <fileset dir="${basedir}/lib">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${extdeps.path}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${env.CORENLP}">
        <include name="*.jar"/>
      </fileset>
    </path>
  </target>
			
  <target name="compile" depends="classpath,extdeps"
        description="compile the source">
    <echo message="${env.CLASSPATH}"/>
    <mkdir    dir="${build.path}" />
    <javac srcdir="${src}" destdir="${build.path}"
      debug="${compile.debug}"
        encoding="${compile.encoding}"   
     deprecation="${compile.deprecation}"
        optimize="${compile.optimize}"
          source="${compile.source}"
          target="${compile.target}"
          fork="true"
        includeantruntime="false">
        <classpath refid="classpath" />
    </javac>
    <!-- copy application resources -->
     <copy todir="${build.path}">
      <fileset dir="${src}" excludes="**/*.java,**/*.html"/>
    </copy>
  </target>

  <target name="clean"
        description="clean up" >
    <delete dir="${build.path}"/>
  </target>
	
  <target name="all" depends="clean,compile"
          description="Clean and re-compile." />
</project>
